/** --------------------------------------------------------------------

  A11Y Tool Tips

--------------------------------------------------------------------- */

$tip-bg:                              fade-out($govuk-text-colour, .01);
$tip-base-size:                       12px;
$tip-arrow-height:                     6px;

$tip__trigger--border-bottom:         1px dotted #666 !default;

$tip--compile-top:                    true !default;
$tip--compile-left:                   true !default;
$tip--compile-right:                  true !default;

$tip--delay:                          1s !default;


// break point
$bp-small:                            41.25em !default;

// ---------------------------------------------------------------------

// single mixin to generate the tool tip arrow direction
@mixin svg-arrow ($color, $position: up) {

    $degrees: 0;
    $height:  6px;
    $width:   18px;

    @if ($position == down) {
        $degrees: 180 18 6;
    }
    @else if ($position == left) {
        $degrees: -90 18 18;
        $height: 18px;
        $width: 6px;
    }
    @else if ($position == right) {
        $degrees: 90 6 6;
        $height: 18px;
        $width: 6px;
    }

    background: no-repeat url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="#{$width * 2}" height="#{$height * 2}"><path fill="#{$color}" transform="rotate(#{$degrees})" d="M2.658,0.000 C-13.615,0.000 50.938,0.000 34.662,0.000 C28.662,0.000 23.035,12.002 18.660,12.002 C14.285,12.002 8.594,0.000 2.658,0.000 Z"/></svg>');
    background-size: 100% auto;
    height: $height;
    width: $width;
}


// every tool tip direction has these base styles
%base-effects {
  opacity: 0;
  pointer-events: none;
  transition: opacity .2s $tip--delay ease-in-out,
              transform .2s $tip--delay ease-in-out;
  transform-style: preserve-3d;
  visibility: hidden;
}

// ---------------------------------------------------------------------

.a11y-tip {
  display: inline-block;
  position: relative;

  &__trigger {
    cursor: help;

    &[tabindex] {
      border-bottom: 1px dashed $govuk-text-colour;
    }

    &[aria-describedby]:focus {
      background: $govuk-focus-colour;
      outline: 1px solid $govuk-focus-colour;
    }

    &[aria-describedby]:hover + ,
    &[aria-describedby]:focus + {

      .a11y-tip__help,
      .a11y-tip__help:after {
        opacity: 1;
        pointer-events: auto;
        visibility: visible;
      }

      .a11y-tip__help {

        &,
        &:after {
          transform: translate(-50%, 0px);
        }

        @media screen and ( min-width: $bp-small ) {
          @if $tip--compile-left == true {
            &--left,
            &--left:after{
              transform: translate(0px, -50%);
            }
          }

          @if $tip--compile-right == true {
            &--right,
            &--right:after {
              transform: translate(0px, -50%);
            }
          }
        }
      }
    }
  }

  &--no-delay {

    .a11y-tip__help,
    .a11y-tip__help:after {
      transition: opacity .2s ease-in-out,
                  transform .2s ease-in-out;
    }
  }
}


.js .a11y-tip__help,
.no-js [role="tooltip"].a11y-tip__help {
  @extend %base-effects;
  background: $tip-bg;
  color: #fff;
  font-size: $tip-base-size + 4;
  left: 50%;
  margin-top: 6px + $tip-arrow-height;
  min-width: 150px;
  padding: 8px 10px;
  position: absolute;
  text-align: left;
  top: 100%;
  transform: translate(-50%, 10px);
  width: 100%;
  z-index: 10;

  &:after {
    @include svg-arrow($tip-bg, 'down');
    @extend %base-effects;
    bottom: 100%;
    content: '';
    left: 50%;
    margin-top: 6px;
    position: absolute;
    transform: translate(-50%, 10px);
    z-index: 10;
  }


  @if $tip--compile-top == true {
    // reposition tip to the top
    &--top {
      bottom: 100%;
      left: 50%;
      margin-bottom: 6px + $tip-arrow-height;
      transform-origin: center top;
      transform: translate(-50%, 10px);

      // cancel bottom default styling
      margin-top: 0;
      top: auto;

      &:after {
        @include svg-arrow($tip-bg);
        left: 50%;
        margin-bottom: 6px;
        top: 100%;
        transform-origin: center top;
        transform: translate(-50%, -10px);

        // cancel bottom default styling
        margin-top: 0;
      }
    }
  }


  // Left and Right positions are only useful on larger sized
  // screens.  So they should go back to the bottom default
  // positioning/styling when a screen isn't wide enough.
  @media screen and (min-width: $bp-small) {

    @if $tip--compile-left == true {
      &--left {
        margin-right: 5px + $tip-arrow-height;
        right: 100%;
        top: 50%;
        transform: translate(10px, -50%);

        // cancel bottom default styling
        left: auto;
        margin-top: 0;

        &:after {
          @include svg-arrow($tip-bg, 'left');
          left: 100%;
          margin-right: 5px;
          top: 50%;
          transform: translate(-10px, -50%);

          // cancel bottom default styling
          margin-top: 0;
        }
      }
    } // end @if left


    @if $tip--compile-right == true {
      &--right {
        left: 100%;
        margin-left: 5px + $tip-arrow-height;
        top: 50%;
        transform: translate(10px, -50%);

        // cancel bottom default styling
        margin-top: 0;

        &:after {
          @include svg-arrow($tip-bg, 'right');
          margin-left: 5px;
          right: 100%;
          top: 50%;
          transform: translate(10px, -50%);

          // cancel bottom default styling
          bottom: auto;
          left: auto;
          margin-top: 0;
        }
      }
    } // end @if right
  }
}


// hide tool tips if the ESC key is hit
.a11y-tip--hide .a11y-tip__help {
  display: none;
}


.no-js .a11y-tip__help:not([role]) {
  font-size: .85em;

  &:before {
    content: "(";
  }

  &:after {
    content: ")";
  }
}
